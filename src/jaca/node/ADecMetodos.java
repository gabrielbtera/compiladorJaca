/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.node;

import jaca.analysis.*;

@SuppressWarnings("nls")
public final class ADecMetodos extends PMetodos
{
    private PDec2 _dec2_;

    public ADecMetodos()
    {
        // Constructor
    }

    public ADecMetodos(
        @SuppressWarnings("hiding") PDec2 _dec2_)
    {
        // Constructor
        setDec2(_dec2_);

    }

    @Override
    public Object clone()
    {
        return new ADecMetodos(
            cloneNode(this._dec2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecMetodos(this);
    }

    public PDec2 getDec2()
    {
        return this._dec2_;
    }

    public void setDec2(PDec2 node)
    {
        if(this._dec2_ != null)
        {
            this._dec2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dec2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dec2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dec2_ == child)
        {
            this._dec2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dec2_ == oldChild)
        {
            setDec2((PDec2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
