Package calculadora;

Helpers
 digito = ['0' .. '9'];
 underline = '_';
 
 letra_minuscula =  (['a' .. 'z'] | [224 .. 227] | [233 .. 234] | 237 | [243 .. 245] | 250 | 231);
 letra_maiuscula = (['A' .. 'Z'] | [192 .. 195] | [201 .. 202] | [211 .. 213] | 218 | 199);

 identificador_undermeio = (letra_maiuscula | underline | letra_minuscula)+ | (letra_minuscula | underline | letra_maiuscula)+;
 identificador_underfim = (letra_maiuscula | letra_minuscula | underline)+ | ( letra_minuscula | letra_maiuscula | underline)+;
 identificador_pronto = identificador_undermeio | identificador_underfim;
 
 id_classehelp =  underline (letra_maiuscula | letra_minuscula)+ | underline (letra_minuscula | letra_maiuscula)+;

 espaco = ' ';
 rc = 13;
 nl = 10;
 comentario_bloco = '{'([32..124] | 126 | [128..254] | (10 | 13 | 10 13))*'}';
 comentario_linha = '#'([32..126] | [128..254])* (10 | 13 | 10 13);
 
 numero_inteiro = digito+;
 numero_real = numero_inteiro ',' numero_inteiro;
 real_cientifico = digito (',' numero_inteiro)? ('e' | 'E') '-'? numero_inteiro;

Tokens
 funcao = 'fun'231 227 'o';
 operador_relacao = '&';
 ponto_e_virgula = ';';
 real = 'real';
 boleano = 'bool';
 verdade = 'verdade';
 falso = 'falso';
 soma = '+';
 menos = '-';
 mult = '*';
 div = '/';
 mod = '%';
 igual = '==';
 menor_q = '<';
 menor_igual = '<=';
 negacao = '!';
 par_esq = '(';
 par_dir = ')';
 inicializacao = ':=';
 virgula = ',';
 classe = 'classe';
 objeto = 'objeto';
 variavel = 'var';
 constante = 'const';
 
 procedimento = 'procedimento';
 inicio = 'in'237'cio';
 fim = 'fim';
 se = 'se';
 senao = 'sen'227'o';
 enquanto = 'enquanto';
 e = 'e';
 ou = 'ou';
 ponto = '.';
 filha_da_classe = 'filha da classe';
 procedimento_main = '>>>';
 
 
 comentario = comentario_bloco | comentario_linha;
 
 id_class = id_classehelp;

 numero = numero_real | real_cientifico;
 
 
 
 identificador = (letra_maiuscula | letra_minuscula)+ | (letra_minuscula | letra_maiuscula)+ | identificador_pronto;
 
 vazio = (espaco | rc | nl)+;


Ignored Tokens
 vazio, comentario;
 
 
Productions
 programa {-> programa} =
  [esq]:familia? [dir]:lista_classe {-> New programa.a_programa(esq.familia, [dir.def_classe])};
 lista_classe {-> def_classe*} =
  {lista_classe} [esq]:def_classe [dir]:lista_classe {-> [esq.def_classe, dir.def_classe]} |
  {classe} def_classe {-> [def_classe]};

 familia {-> familia} =
  {familia} lista_relacao ponto_e_virgula {-> New familia.a_lista_relacao([lista_relacao.relacao])};
 lista_relacao {-> relacao*} =
  {lista_relacao} [esq]:relacao operador_relacao [dir]:lista_relacao {-> [esq.relacao, dir.relacao]} |
  {relacao} relacao {-> [relacao]};
 relacao {-> relacao} =
  {relacao} classe [esq]:pcid [dir]:filha_relacao {-> New relacao.a_relacao(esq.pcid, dir.relacao)};
 filha_relacao {-> relacao} =
  {filha_relacao} filha_da_classe pcid {-> New relacao.a_filha_relacao(pcid)};

 def_classe {-> def_classe} =
  {def_classe} classe [nome]:pcid inicio [esq]:atributos? [dir]:metodos? fim {-> New def_classe.a_def_classe(nome.pcid, [esq.dec], [dir.dec2])};

 atributos {-> dec*} =
  {atributos} [esq]:dec [dir]:atributos {-> [esq.dec, dir.dec]} |
  {dec} dec {-> [dec]};
 metodos {-> dec2*} =
  {metodos} [esq]:dec2 [dir]:metodos {-> [esq.dec2, dir.dec2]} |
  {dec} dec2 {-> [dec2]};
  
 dec {-> dec} =
  {obj} dec_obj {-> dec_obj.dec} |
  {var} dec_var {-> dec_var.dec} |
  {cons} dec_cons {-> dec_cons.dec};
 lista_decs {-> dec*} =
  {lista_dec} [esq]:dec [dir]:lista_decs {-> [esq.dec, dir.dec]} |
  {dec} dec {-> [dec]};
 lista_dec_cons {-> dec*} =
  {lista_dec_cons} [esq]:dec_cons [dir]:lista_dec_cons {-> [esq.dec, dir.dec]}|
  {dec_cons} dec_cons {-> [dec_cons.dec]};
 dec_obj {-> dec} =
  {dec_obj} objeto [esq]:pcid [dir]:lista_id ponto_e_virgula {-> New dec.a_dec_obj(esq.pcid, [dir.exp])};
 dec_var {-> dec} =
  {dec_var} variavel [esq]:tipo [dir]:lista_id ponto_e_virgula {-> New dec.a_dec_var(esq.tipo, [dir.exp])};
 dec_cons {-> dec} =
  {dec_cons} constante [esq]:tipo_primitivo [dir]:lista_inicializacao+ ponto_e_virgula {-> New dec.a_dec_cons(esq.tipo_primitivo, [dir.pinicializacao])};
 lista_id {-> exp*} =
  {lista_id} [esq]:pid virgula [dir]:lista_id {-> [esq.exp, dir.exp]} |
  {id} pid {-> [pid.exp]};
 lista_inicializacao {-> pinicializacao*} =
  {lista_inicializacao} [esq]:pinicializacao virgula [dir]:lista_inicializacao {-> [esq.pinicializacao, dir.pinicializacao]} |
  {inicializacao} pinicializacao {-> [pinicializacao]};
 lista_inicializacao {-> pinicializacao*} =
  {lista_inicializacao} [esq]:pinicializacao virgula [dir]:lista_inicializacao {-> [esq.pinicializacao, dir.pinicializacao]} |
  {inicializacao} pinicializacao {-> [pinicializacao]};
 pinicializacao {-> pinicializacao} =
  {pinicializacao} [esq]:pid inicializacao [dir]:exp {-> New pinicializacao.a_pinicializacao(esq.exp, dir.exp)};
 pcid =
  {cid} cid;